---
 // ThemeToggle.astro - Component for switching between light and dark themes
---

<button id="theme-toggle" class="theme-toggle" aria-label="Toggle dark mode">
	<svg class="sun-icon" width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
		<circle cx="12" cy="12" r="5" stroke="currentColor" stroke-width="2"/>
		<path d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42" stroke="currentColor" stroke-width="2"/>
	</svg>
	<svg class="moon-icon" width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
		<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" stroke="currentColor" stroke-width="2" fill="currentColor"/>
	</svg>
</button>

<style>
	.theme-toggle {
		position: fixed;
		bottom: 20px;
		right: 20px;
		background: color-mix(in oklab, var(--surface) 92%, transparent);
		border: 1px solid var(--border);
		border-radius: 12px;
		width: 44px;
		height: 44px;
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		transition: transform .15s ease, box-shadow .2s ease, background-color .2s ease, border-color .2s ease;
		backdrop-filter: saturate(140%) blur(10px);
		z-index: 1000;
		box-shadow: var(--shadow);
	}

	.theme-toggle:hover {
		transform: translateY(-1px);
		box-shadow: var(--shadow-lg);
		border-color: color-mix(in oklab, var(--primary) 35%, var(--border));
	}

	.theme-toggle .sun-icon { display: block; color: var(--secondary); }
	.theme-toggle .moon-icon { display: none; color: #a78bfa; }

	:global(body.dark-theme) .theme-toggle .sun-icon { display: none; }
	:global(body.dark-theme) .theme-toggle .moon-icon { display: block; }

	@media (max-width: 768px) {
		.theme-toggle {
			bottom: 16px;
			right: 16px;
			width: 42px;
			height: 42px;
		}
	}
</style>

<script>
	// PUBLIC_INTERFACE
	function initThemeToggle() {
		/** Initialize theme toggle, persisting preference in localStorage. */
		const themeToggle = document.getElementById('theme-toggle');
		const body = document.body;
		const savedTheme = localStorage.getItem('theme') || 'light';
		if (savedTheme === 'dark') body.classList.add('dark-theme');

		function toggleTheme() {
			const isDark = body.classList.contains('dark-theme');
			if (isDark) {
				body.classList.remove('dark-theme');
				localStorage.setItem('theme', 'light');
			} else {
				body.classList.add('dark-theme');
				localStorage.setItem('theme', 'dark');
			}
		}
		if (themeToggle) themeToggle.addEventListener('click', toggleTheme);
	}

	if (document.readyState === 'loading') {
		document.addEventListener('DOMContentLoaded', initThemeToggle);
	} else {
		initThemeToggle();
	}
</script>
